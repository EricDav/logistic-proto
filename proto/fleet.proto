syntax = "proto3";
package fleetManagement;

service FleetManagementService {
    rpc CreateVehicle (CreateVehicleRequest) returns (SucessResponse) {}
    rpc UpdateVehicle (UpdateVehicleRequest) returns (EmptyResponse) {}
    rpc CreateDocument (CreateDocumentRequest) returns (CreateDocumentResponse) {}
    rpc FetchVehicleDocument (FetchVehicleDocumentRequest) returns (FetchVehicleDocumentResponse) {}
    rpc FetchDocument (FetchDocumentRequest) returns (FetchDocumentResponse) {}
    rpc DeleteDocument (DeleteDocumentRequest) returns (SucessResponse) {}
    rpc UpdateDocument (UpdateDocumentRequest) returns (UpdateDocumentResponse) {}
    rpc FetchVehicles (FetchVehiclesRequest) returns (FetchVehiclesResponse) {}
    rpc ValidateVehicleNumber (ValidateVehicleNumberRequest) returns (ValidateVehicleNumberResponse) {}
    rpc GetServiceStandard (GetServiceStandardRequest) returns (GetServiceStandardResponse) {}
    rpc FetchSingleVehicle (FetchSingleVehicleRequest) returns (FetchSingleVehicleResponse) {}
    rpc AssignVehicleToDriver (AssignVehicleToDriverRequest) returns (SucessResponse) {}
    rpc LogAvailability (LogAvailabilityRequest) returns (SucessResponse) {}
    rpc GetVehiclePhotos (GetVehiclePhotosRequest) returns (GetVehiclePhotosResponse) {}

    rpc CreateQuestion (CreateQuestionRequest) returns (CreateQuestionResponse) {}
    rpc FetchQuestions (FetchQuestionsRequest) returns (FetchQuestionsResponse) {}
    rpc CreateInspections (CreateInspectionsRequest) returns (CreateInspectionsResponse) {}
    rpc FetchInspections (FetchInspectionsRequest) returns (FetchInspectionsResponse) {}
    rpc FetchSingleInspection (FetchSingleInspectionRequest) returns (FetchSingleInspectionResponse) {}
    rpc AddResponsesToInspection (AddResponsesToInspectionRequest) returns (AddResponsesToInspectionResponse) {}
    rpc AddSingleResponseToInspection (AddSingleResponseToInspectionRequest) returns (EmptyResponse) {}
    rpc GetInspectionWeeklySummaryCount (GetInspectionWeeklySummaryCountRequest) returns (GetInspectionWeeklySummaryCountResponse) {}

    rpc GetDashboardStat (GetDashboardStatRequest) returns (GetDashboardStatResponse) {}
    rpc FetchSparesIssued (FetchSparesIssuedRequest) returns (FetchSparesIssuedResponse) {}
    rpc GetWorkOrderHistory (GetWorkOrderHistoryRequest) returns (GetWorkOrderHistoryResponse) {}
    rpc FetchMaintenanceHistory (FetchMaintenanceHistoryRequest) returns (FetchMaintenanceHistoryResponse) {}
    rpc FetchCategories (FetchCategoriesRequest) returns (FetchCategoriesResponse) {}
    rpc FetchServiceHistory (FetchServiceHistoryRequest) returns (FetchServiceHistoryResponse) {}
    rpc FetchSingleWorkOrder (FetchSingleWorkOrderRequest) returns (FetchSingleWorkOrderResponse) {}
    rpc FetchSingleSpare (FetchSingleSpareRequest) returns (FetchSingleSpareResponse) {}
    rpc FetchWorkOrder (FetchWorkOrderRequest) returns (FetchWorkOrderResponse) {}
    rpc FetchSpares (FetchSparesRequest) returns (FetchSparesResponse) {}
    rpc FetchIssues (FetchIssuesRequest) returns (FetchIssuesResponse) {}
    rpc FetchSingleIssues (FetchSingleIssuesRequest) returns (FetchSingleIssuesResponse) {}
    rpc GetMaintenanceCostStat (GetMaintenanceCostStatRequest) returns (GetMaintenanceCostStatResponse) {}
    rpc CreateIssue (CreateIssueRequest) returns (CreateIssueResponse) {}
    rpc UpdateIssueStatus (UpdateIssueStatusRequest) returns (SucessResponse) {}
    rpc DeleteIssue (DeleteIssueRequest) returns (SucessResponse) {}
    rpc CreateWorkOrder (CreateWorkOrderRequest) returns (CreateWorkOrderResponse) {}
    rpc UpdateWorkOrderStatus (UpdateWorkOrderStatusRequest) returns (SucessResponse) {}
    rpc DeleteWorkorder (DeleteWorkorderRequest) returns (SucessResponse) {}
    rpc AddSupplier (AddSupplierRequest) returns (AddSupplierResponse) {}
    rpc UpdateWorkOrder (UpdateWorkOrderRequest) returns (UpdateWorkOrderResponse) {}
}

message SucessResponse {
    bool success = 1;
}
message EmptyResponse {}
message CreateVehicleRequest {
    string capacity = 1;
    string oem = 2;
    string timeInterval = 3;
    string distanceInterval = 4;
    string timeDueThreshold = 5;
    string distanceDueThreshold = 6;
    string lastServiceKM = 7;
    string number = 8;
    string model = 9;
    string frontViewImageUrl = 10;
    string rightViewImageUrl = 11;
    string truckNumber = 12;
    string color = 13;
    string engineNumber = 14;
    string tractorChasisNumber = 15;
    string trailerNumber = 16;
    string trailerChasisNumber = 17;
    string tankCapacity = 18;
}
message UpdateVehicleRequest {
    string vehicleId = 1;
    string number = 2;
}
message CreateDocumentRequest {
    string vehicleNumber = 1;
    string issueDate = 2;
    string validity = 3;
    string imageUrl = 4;
    string name = 5;
}
message CreateDocumentResponse {
    bool success = 1;
    Document data = 2;
}
message FetchVehicleDocumentRequest {
    string driverId = 1;
}
message FetchVehicleDocumentResponse {
    repeated Document documents = 1;
}
message Document {
    string id = 1;
    string imageUrl = 2;
    string name = 3;
    string validity = 4;
    string issueDate = 5;
    string expiryDate = 6;
}
message FetchDocumentRequest {
    string pageNumber = 1;
    string pageSize = 2;
    string siteId = 3;
    string status = 4;
}
message FetchDocumentResponse {
    repeated Document documents = 1;
    Paginate pagination = 2;
}
message DeleteDocumentRequest {
    string id = 1;
}
message UpdateDocumentRequest {
    string id = 1;
    string issueDate = 2;
}
message UpdateDocumentResponse {
    bool success = 1;
    UpdatedDocument data = 2;
}
message UpdatedDocument {
    string id = 1;
    string name = 2;
    string expiryDate = 3;
    string validity = 4;
    string updatedAt = 5;
}
message FetchVehiclesRequest {
    string pageSize = 1;
    string currentPage = 2;
    string oem = 3;
    string search = 4;
    string status = 5;
    string type = 6;
}
message FetchVehiclesResponse {
    repeated Vehicle vehicles = 1;
    Paginate pagination = 2;
}
message Vehicle {
    string number = 1;
    string model = 2;
    string frontViewImageUrl = 3;
    string rightViewImageUrl = 4;
    int32 capacity = 5;
    string oem = 6;
    string company = 7;
    string truckNumber = 8;
    string color = 9;
    string engineNumber = 10;
    string siteNumber = 11;
    string tractorChasisNumber = 12;
    string tractorNumber = 13;
    string trailerNumber = 14;
    string trailerChasisNumber = 15;
    int32 tankCapacity = 16;
    int32 year = 17;
    int32 odometer = 18;
    int32 nextServiceKM = 19;
    int32 lastServiceKM = 20;
    int32 serviceReminderKM = 21;
    string gpsTrackingNumber = 22;
    string location = 23;
    string dateOfPurchase = 24;
    string userId = 25;
    string userData = 26;
    string status = 27;
}
message Paginate {
    int32 total = 1;
    int32 pageSize = 2;
    int32 currentPage = 3;
}
message ValidateVehicleNumberRequest {
    string vehicleNumber = 1;
}
message ValidateVehicleNumberResponse {
    bool success = 1;
    string message = 2;
}
message GetServiceStandardRequest {
    string oem = 1;
    string capacity = 2;
}
message GetServiceStandardResponse {
    bool success = 1;
    ServiceStandard data = 2;
}
message ServiceStandard {
    string id = 1;
    string capacity = 2;
    string oem = 3;
    string timeInterval = 4;
    string distanceInterval = 5;
    string timeDueThreshold = 6;
    string distanceDueThreshold = 7;
}
message FetchSingleVehicleRequest {
    string vehicleNumber = 1;
}
message DocumentedVehicle {
    string number = 1;
    string model = 2;
    string frontViewImageUrl = 3;
    string rightViewImageUrl = 4;
    string capacity = 5;
    string oem = 6;
    string company = 7;
    string truckNumber = 8;
    string color = 9;
    string engineNumber = 10;
    string siteNumber = 11;
    string tractorChasisNumber = 12;
    string tractorNumber = 13;
    string trailerNumber = 14;
    string trailerChasisNumber = 15;
    string tankCapacity = 16;
    string year = 17;
    string odometer = 18;
    string nextServiceKM = 19;
    string lastServiceKM = 20;
    string serviceReminderKM = 21;
    string gpsTrackingNumber = 22;
    string location = 23;
    string dateOfPurchase = 24;
    string userId = 25;
    string userData = 26;
    string status = 27;
    repeated Document documents = 28;
}
message FetchSingleVehicleResponse {
    DocumentedVehicle vehicle = 1;
}
message AssignVehicleToDriverRequest {
    string vehicleNumber = 1;
    string userId = 2;
}
//check logAvailability
message LogAvailabilityRequest {
    repeated VehicleNumber vehicleNumbers = 1;
    string status = 2;
}
message VehicleNumber {
    string number = 1;
}
message GetVehiclePhotosRequest {
    string number = 1;
}
message GetVehiclePhotosResponse {
    repeated Photo photos = 1;
}
message Photo {
    string id = 1;
    string source = 2;
    string imageUrl = 3;
    string createdAt = 4;
}
//Inspection
message CreateQuestionRequest {
    string question = 1;
    string type = 2;
}
message CreateQuestionResponse {
    bool success = 1;
    Question question = 2;
}
message FetchQuestionsRequest {
    string type = 1;
}
message FetchQuestionsResponse {
    bool success = 1;
    repeated Question questions = 2;
}
message Question {
    string id = 1;
    string question = 2;
    string defectType = 3;
    string otherResponse = 4;
    string type = 5;
}
message FetchInspectionsRequest {
    string pageSize = 1;
    string pageNumber = 2;
    string inspectionType = 3;
    string userType = 4;
}
message FetchInspectionsResponse {
    InspectionPaginate pagination = 1;
    repeated Inspection inspections = 2;
}
message InspectionPaginate {
    int32 total = 1;
    int32 pageSize = 2;
    int32 pageNumber = 3;
}
 message Inspection {
    string id = 1;
    string siteId = 2;
    int32 odonometer = 3;
    int32 kilometerReading = 4;
    string userId = 5;
    string userType = 6;
    string status = 7;
    string recomendation = 8;
    Vehicle vehicle = 9;
 }
 message CreateInspectionsRequest {
    string vehicleNumber = 1;
    string siteId = 2;
    int32 odonometer = 3;
    int32 kilometerReading = 4;
    string userId = 5;
    string userType = 6;
    string status = 7;
    repeated Responses responses = 8;
 }
 message Responses {
    int32 questionId = 1;
    string images = 2; //array
    string answer = 3;
    string description = 4;
 }
 message CreateInspectionsResponse {
    bool success = 1;
    Inspection inspection = 2;
 }
 message FetchSingleInspectionRequest {
    string inspectionId = 1;
 }
 message FetchSingleInspectionResponse {
    bool success = 1;
    SingleInspection inspection = 2;
 }
 message SingleInspection {
    string id = 1;
    string siteId = 2;
    int32 odonometer = 3;
    int32 kilometerReading = 4;
    string userId = 5;
    string userType = 6;
    string status = 7;
    string recomendation = 8;
    Vehicle vehicle = 9;
    SingleResponses reponse = 10;
 }
 message SingleResponses {
    string id = 1;
    string answer = 2;
    string description = 3;
    repeated Images images = 4; 
    Question question = 5;
 }
 message Images {
    string id = 1;
    string imageUrl = 2;
 }
 message AddResponsesToInspectionRequest {
    string inspectionId = 1;
    repeated Responses responses = 2;
 }
 message AddResponsesToInspectionResponse {
    bool success = 1;
    Inspection inspection = 2;
 }
 message AddSingleResponseToInspectionRequest {
    Responses response = 1;
 }
 message GetInspectionWeeklySummaryCountRequest {
    string siteId = 1;
 }
 message GetInspectionWeeklySummaryCountResponse {
    repeated DaysOfWeekInspectionSummary daysOfWeekInspectionSummary = 1;
 }
 message DaysOfWeekInspectionSummary {
    string name = 1;
    int32 failCount = 2;
    int32 passCount = 3;
 }
 //Issues
 message GetDashboardStatRequest{
    string siteId = 1;
 }
 message GetDashboardStatResponse {
    IssueCount issueCount = 1;
    repeated StatusCount vehicleStatusCount = 2;
    repeated StatusCount workOrderStatusCount = 3;
    SpareCount spareCount = 4;
    DocumentRenewalCount documentRenewalCount = 5;
    ServiceReminder serviceReminder = 6;
 }
 message IssueCount {
    int32 open = 1;
    int32 due = 2;
 }
 message StatusCount {
    string status = 1;
    int32 count = 2;
 }
 message SpareCount {
    int32 outOfStockSpareCount = 1;
    int32 lowSpareCount = 2;
 }
 message DocumentRenewalCount {
    int32 expiredCount = 1;
    int32 dueCount = 2;
 }
 message ServiceReminder {
    int32 serviceDueCount = 1;
    int32 serviceOverDueCount = 2;
 }
 message FetchSparesIssuedRequest {
    string pageSize = 1;
    string siteId = 2;
    string pageNumber = 3;
 }
 message FetchSparesIssuedResponse {
    repeated SparesIssued sparesIssued = 1;
    Paginate pagination = 2;
 }
 message SparesIssued {
    string id = 1;
    int32 qty = 2;
    int32 totalAmount = 3;
    WorkOrder workOrder = 4;
    Spare spare = 5;
 }
 message WorkOrder {
    string number = 1;
    string maintenanceType = 2;
    string jobDescription = 3;
    string technicianId = 4;
    string status = 5;
    int32 nextServiceKM = 6;
    int32 lastServiceKM = 7;
    int32 variance = 8;
    string timeIn = 9;
    string timeOut = 10;
    Issue issue = 11;
 }
 message Issue {
    string id = 1;
    string siteId = 2;
    string source = 3;
    int32 odonometer = 4;
    int32 kilometerReading = 5;
    string status = 6;
    string issue = 7;
    Vehicle vehicle = 8;
 }
 message Spare {
    int32 id = 1;
    string siteId = 2;
    string name = 3;
    int32 recorderLevel = 4;
    int32 minLevel = 5;
    int32 maxLevel = 6;
    int32 initialStock = 7;
    int32 amount = 8;
    string class = 9;
    string company = 10;
    string code = 11;
    string imageUrl = 12;
 }
 message GetWorkOrderHistoryRequest {
    string pageSize = 1;
    string currentPage = 2;
    string vehicleNumber = 3;
 }
 message GetWorkOrderHistoryResponse {
    repeated WorkOrder workOrders = 1;
    Paginate pagination = 2;
 }
 message FetchMaintenanceHistoryRequest {
    string pageSize = 1;
    string currentPage = 2;
    string siteNumber = 3;
 }
 message FetchMaintenanceHistoryResponse {
    repeated MaintenanceHistory maintenanceHistory = 1;
    Paginate pagination = 2;
 }
 message MaintenanceHistory {
    string vehicleNumber = 1;
    int32 totalAmount = 2;
 }
 message FetchCategoriesRequest {
    string siteId = 1;
 }
 message FetchCategoriesResponse {
    repeated Category categories = 1;
 }
 message Category {
    int32 id = 1;
    string name = 2;
    string siteId = 3;
    int32 SLA = 4;
 }
 message FetchServiceHistoryRequest {
    string pageSize = 1;
    string currentPage = 2;
    string vehicleNumber = 3;
    string status = 4;
 }
 message FetchServiceHistoryResponse {
    repeated WorkOrderHistory workOrderHistory = 1;
    Paginate pagination = 2;
 }
 message WorkOrderHistory {
    string number = 1;
    string maintenanceType = 2;
    string jobDescription = 3;
    string technicianId = 4;
    string status = 5;
    int32 nextServiceKM = 6;
    int32 lastServiceKM = 7;
    int32 variance = 8;
    string timeIn = 9;
    string timeOut = 10;
    Item items = 11;
    Issue issue = 12;
 }
 message Item {
    string id = 1;
    int32 qty = 2;
    int32 totalAmount = 3;
 }
 message FetchSingleWorkOrderRequest {
    string id = 1;
 }
 message FetchSingleWorkOrderResponse {
    SingleWorkOrder workOrder = 1;
    Technician technician = 2;
 }
 message Technician {
    string id = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
    string country = 5;
    string imageUrl = 6;
    string siteId= 7;
    string isDeleted = 8;
    string vehicleNumber = 9;
    repeated Role role = 10;
 }
 message Role {
    int32 id = 1;
    string name = 2;
 }
 message SingleWorkOrder {
    string number = 1;
    string maintenanceType = 2;
    string jobDescription = 3;
    string technicianId = 4;
    string status = 5;
    int32 nextServiceKM = 6;
    int32 lastServiceKM = 7;
    int32 variance = 8;
    string timeIn = 9;
    string timeOut = 10;
    Issue issue = 11;
    Category category = 12;
    repeated SingleItem items = 13;
 }
 message SingleItem {
    string id = 1;
    int32 qty = 2;
    int32 totalAmount = 3;
    Spare spare = 4;
 }
 message FetchSingleSpareRequest {
    string spareId = 1;
 }
 message FetchSingleSpareResponse {
    SingleSpare spare = 1;
 }
 message SingleSpare {
    int32 id = 1;
    string siteId = 2;
    string name = 3;
    int32 recorderLevel = 4;
    int32 minLevel = 5;
    int32 maxLevel = 6;
    int32 initialStock = 7;
    int32 amount = 8;
    string class = 9;
    string company = 10;
    string code = 11;
    string imageUrl = 12;
    repeated Supplier supliers = 13;
 }
 message Supplier {
    string id = 1;
    string name = 2;
    int32 qty = 3;
    string note = 4;
 }
 message FetchWorkOrderRequest {
    string pageSize = 1;
    string pageNumber = 2;
    string siteId = 3;
    string status = 4;
    string technicianId = 5;
 }
 message Pagination {
    int32 total = 1;
    int32 pageSize = 2;
    int32 pageNumber = 3;
}
 message FetchWorkOrderResponse {
    repeated WorkOrder data = 1;
    Pagination pagination = 2;
 }
 message FetchSparesRequest {
    string pageSize = 1;
    string pageNumber = 2;
    string siteId = 3;
    string search = 4;
 }
 message FetchSparesResponse {
    repeated Spare spare = 1;
    Paginate pagination = 2;
 }
 message FetchIssuesRequest {
    string pageSize = 1;
    string currentPage = 2;
    string siteId = 3;
    string vehicleNumber = 4;
    string source = 5;
    string status = 6;
 }
 message FetchIssuesResponse {
    repeated Issues issues = 1;
    Paginate pagination = 2;
 }
 message Issues {
    string id = 1;
    string siteId = 2;
    string source = 3;
    int32 odonometer = 4;
    int32 kilometerReading = 5;
    string status = 6;
    string issue = 7;
    Vehicle vehicle = 8;
    repeated Image image = 9;
 }
 message Image {
    string id = 1;
    string imageUrl = 2;
 }
 message FetchSingleIssuesRequest {
    string issueId = 1;
 }
 message FetchSingleIssuesResponse {
    SingleIssue issue = 1;
 }
 message SingleIssue {
    string id = 1;
    string siteId = 2;
    string source = 3;
    int32 odonometer = 4;
    int32 kilometerReading = 5;
    string status = 6;
    string issue = 7;
    Vehicle vehicle = 8;
    repeated IssueWorkOrder workOrder = 9;
 }
 message IssueWorkOrder {
    string number = 1;
    string maintenanceType = 2;
    string jobDescription = 3;
    string technicianId = 4;
    string status = 5;
    int32 nextServiceKM = 6;
    int32 lastServiceKM = 7;
    int32 variance = 8;
    string timeIn = 9;
    string timeOut = 10;
 }
 message GetMaintenanceCostStatRequest {
    string siteId = 1;
 }
 message GetMaintenanceCostStatResponse {
    repeated MaintenanceCostStat maintenanceCostStat = 1;
 }
 message MaintenanceCostStat {
    string name = 1;
    string PMCount = 2;
    string CMCount = 3;
 }
 message CreateIssueRequest {
    int32 vehicleNumber = 1;
    string status = 2;
    string issue = 3;
    string siteId = 4;
    string source = 5;
    int32 odonometer = 6;
    int32 kilometerReading = 7;
    string image = 8;
 }
 message CreateIssueResponse {
    bool success = 1;
    Issue issue = 2;
 }
 message UpdateIssueStatusRequest {
    string issue = 1;
    string status = 2;
 }
 message DeleteIssueRequest {
    string issue = 1;
 }
 message CreateWorkOrderRequest {
    string issueId = 1;
    string categoryId = 2;
    string maintenanceType = 3;
    string technicianId = 4;
    string jobDescription = 5;
 }
 message CreateWorkOrderResponse {
    string issueId = 1;
    string categoryId = 2;
    string maintenanceType = 3;
    string technicianId = 4;
    string jobDescription = 5;
    Issue issue = 6;
    Category category = 7;
    string number = 8;
    string status = 9;
    int32 nextServiceKM = 10;
    int32 lastServiceKM = 11;
    int32 variance = 12;
    string timeIn = 13;
    string timeOut = 14;
    Technician technician = 15;
 }
 message UpdateWorkOrderStatusRequest {
    string status = 1;
    string id = 2;
 }
 message DeleteWorkorderRequest {
    string id = 1;
 }
 message AddSupplierRequest {
    string spareCode = 1;
    int32 qty = 2;
    string note = 3 ;
    string name = 4;
 }
 message AddSupplierResponse {
    string id = 1;
    string name = 2;
    int32 qty = 3;
    string note = 4;
    Spare spare = 5;
 }
 message UpdateWorkOrderRequest {
    string id = 1;
    string jobDescription = 2;
    string maintenanceType = 3;
    string categoryId = 4;
    string technicianId = 5;
    repeated WorkItem item = 6;
 }
 message WorkItem {
    string spareId = 1;
    int32 qty = 2;
 }
message UpdateWorkOrderResponse {
    string number = 1;
    string jobDescription = 2;
    string maintenanceType = 3;
    Category category = 4;
    Technician technician = 5;
}
